{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/block-view/block-view.component.html","webpack:///./src/app/components/block-view/block-view.component.scss","webpack:///./src/app/components/block-view/block-view.component.ts","webpack:///./src/app/pages/blockchain-viewer/blockchain-viewer.component.html","webpack:///./src/app/pages/blockchain-viewer/blockchain-viewer.component.scss","webpack:///./src/app/pages/blockchain-viewer/blockchain-viewer.component.ts","webpack:///./src/app/services/blockchain.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BlockchainViewerComponent } from './pages/blockchain-viewer/blockchain-viewer.component';\nimport { BlockViewComponent } from './components/block-view/block-view.component';\n\n\n\n\nconst routes: Routes = [\n{ path: 'blockViewer', component: BlockchainViewerComponent },\n{ path: 'blockView', component: BlockViewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\n    ZherexCoin\\n  </a>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Coin-frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BlockchainViewerComponent } from './pages/blockchain-viewer/blockchain-viewer.component';\nimport { BlockViewComponent } from './components/block-view/block-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BlockchainViewerComponent,\n    BlockViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"card\\\" [class.border-primary]=\\\"isSelectedBlock()\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">Block {{ getBlockNumber() }} <small class=\\\"text-muted\\\" *ngIf=\\\"block.previousHash == 0\\\">(Genesis block)</small></h5>\\n    </div>\\n\\n     <ul class=\\\"list-group list-group-flush\\\">\\n\\t    <li class=\\\"list-group-item\\\">\\n\\t    \\t<span class=\\\"\\\">Hash</span>\\n\\t    \\t<br>\\n\\t    \\t<div class=\\\"text-truncate\\\" [style.color]=\\\"'#' + block.hash.substring(0,6)\\\">\\n\\t    \\t\\t<small>{{ block.hash }}</small>\\n\\t    \\t</div>\\n\\n\\t\\t\\t<br>\\n\\t\\t\\t<span class=\\\"\\\">Hash of previous block</span>\\n\\t    \\t<br>\\n\\n\\t    \\t<div class=\\\"text-truncate\\\" [style.color]=\\\"'#' + block.previousHash.substring(0,6)\\\">\\n\\t    \\t\\t<small>{{ block.previousHash }}</small>\\n\\t    \\t</div>\\n\\t    </li>\\n\\n\\t    <li class=\\\"list-group-item\\\">\\n\\t    \\t<span class=\\\"\\\">Sero</span><br>\\n\\t    \\t<div class=\\\"text-truncate text-muted\\\">\\n\\t    \\t\\t<small>{{ block.sero }}</small>\\n\\t    \\t</div>\\n\\t    </li>\\n\\n\\t    <li class=\\\"list-group-item\\\">\\n\\t    \\t<span class=\\\"\\\">Timestamp</span><br>\\n\\t    \\t<div class=\\\"text-truncate text-muted\\\">\\n\\t    \\t\\t<small>{{ block.timestamp }}</small>\\n\\t    \\t</div>\\n\\t    </li>\\n\\t  </ul>\\n\\n\\t  <!-- <div class=\\\"card-body\\\"> -->\\n\\t  \\t<!-- <span class=\\\"card-link\\\" *ngIf=\\\"!blockHasTx()\\\">Block has no transactions</span> -->\\n\\t  \\t<!-- <span class=\\\"card-link\\\" *ngIf=\\\"blockHasTx()\\\">Contains {{block.transactions.length}} transactions</span> -->\\n\\t  <!-- </div> -->\\n  </div>\"","module.exports = \".card {\\n  width: 18rem;\\n  display: inline-block;\\n  margin: 0 10px 0 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpZWdvL0NvaW4tZnJvbnRlbmQvc3JjL2FwcC9jb21wb25lbnRzL2Jsb2NrLXZpZXcvYmxvY2stdmlldy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLFlBQVk7RUFDWixxQkFBcUI7RUFDckIsa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Jsb2NrLXZpZXcvYmxvY2stdmlldy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcblx0d2lkdGg6IDE4cmVtO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdG1hcmdpbjogMCAxMHB4IDAgMDtcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  \tselector: 'app-block-view',\n  \ttemplateUrl: './block-view.component.html',\n  \tstyleUrls: ['./block-view.component.scss']\n})\nexport class BlockViewComponent implements OnInit {\n\t@Input() public block;\n\t\n    constructor() { }\n\n  \tngOnInit() {\n  \t}\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\t<h1>Blocks on chain</h1>\\n\\t<p>Each card represents a blcok on the chain</p>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Jsb2NrY2hhaW4tdmlld2VyL2Jsb2NrY2hhaW4tdmlld2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from 'src/app/services/blockchain.service';\n\n\n@Component({\n  \tselector: 'app-blockchain-viewer',\n  \ttemplateUrl: './blockchain-viewer.component.html',\n  \tstyleUrls: ['./blockchain-viewer.component.scss']\n})\nexport class BlockchainViewerComponent implements OnInit {\n\tpublic blocks = [];\n\t// dependency injection\n    constructor(private blockchainService: BlockchainService) { \n\n    \tthis.blocks = blockchainService.getBlocks();\n\n  \t}\n\n  \tngOnInit() {\n  \t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Blockchain } from 'node_modules/workspace/Blockchain';\n\n//import { Block } from 'node_modules/workspace/Block';\nimport EC from \"elliptic\";\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class BlockchainService {\n\tpublic blockchainInstance = new Blockchain();\n\t//public blockInstance = new Block();\n\n\tpublic walletKeys = [];\n\n\tconstructor() { \n\t\t//alert(\"hola\");\n\t\tthis.blockchainInstance.difficulty = 1;\n\t\tthis.blockchainInstance.minePendingTransactions('my-wallet-address');\n\t\tthis.generateWalletKeys();\t\t\n\t}\n\n\tgetBlocks() {\n\t\treturn this.blockchainInstance.chain;\n\t}\n\n\n\tgenerateWalletKeys() {\n\t\tconst ec = new EC.ec('secp256k1');\n\t\tconst key = ec.genKeyPair();\n\n\t\tthis.walletKeys.push({\n\t\t\tkeyObj: key,\n\t\t\tpublicKey: key.getPublic('hex'),\n\t\t\tprivateKey: key.getPrivate('hex'),\n\t\t});\n\n\t\tconsole.log(this.walletKeys);\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}