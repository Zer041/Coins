const sss = require('secrets.js-grempe');
const EC = require('elliptic').ec;
const ec = new EC('secp256k1');


class Shamir {
	constructor(dataToSplit = "", shares, theshold) {
		this.shares = shares;
		this.theshold = theshold;
		this.dataToSplit = dataToSplit;
		this.key2hex = sss.str2hex(dataToSplit);
	}

	splitData(data, shares, theshold) {
		this.key2hex = sss.str2hex(data);
		return sss.share(this.key2hex, shares, theshold);
	}

	combShares(combData) {
		let x = sss.combine(combData);
		return sss.hex2str(x);

	}
}

module.exports = Shamir;


/*
var key = 'Hola1234';
var key2hex = sss.str2hex(key);
var shares = sss.share(key2hex, 10, 4);

console.log(shares);

var comb = sss.combine(shares);
comb = sss.hex2str(comb)
console.log(comb === key);
console.log(comb);
*/